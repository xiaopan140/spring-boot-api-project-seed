<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it10086.university.dao.UniversityAccumunateDayMapper">
  <resultMap id="areaMap" type="java.util.LinkedHashMap">
    <result column="statis_day" jdbcType="BIGINT" property="statisDay" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="area_name" jdbcType="VARCHAR" property="areaName" />
    <result column="plan_count" jdbcType="BIGINT" property="planCount" />
    <result column="cust_count" jdbcType="BIGINT" property="custCount" />
    <result column="ground_count" jdbcType="BIGINT" property="groundCount" />
    <result column="broadband_count" jdbcType="BIGINT" property="broadbandCount" />
    <result column="renewal_rate" jdbcType="DOUBLE" property="renewalRate" />
    <result column="communicate_rate" jdbcType="DOUBLE" property="communicateRate" />
    <result column="circle_rate" jdbcType="DOUBLE" property="circleRate" />
    <result column="division_region_rate" jdbcType="DOUBLE" property="divisionRegionRate" />
  </resultMap>
  <resultMap id="universityMap" type="java.util.LinkedHashMap">
    <result column="statis_day" jdbcType="BIGINT" property="statisDay" />
    <result column="university_code" jdbcType="VARCHAR" property="universityCode" />
    <result column="university_name" jdbcType="VARCHAR" property="universityName" />
    <result column="plan_count" jdbcType="BIGINT" property="planCount" />
    <result column="add_count" jdbcType="BIGINT" property="addCount" />
    <result column="broadband_count" jdbcType="BIGINT" property="preposeCount" />
    <result column="renewal_rate" jdbcType="DOUBLE" property="renewalRate" />
    <result column="communicate_rate" jdbcType="DOUBLE" property="communicateRate" />
    <result column="circle_rate" jdbcType="DOUBLE" property="circleRate" />
    <result column="new_rate" jdbcType="DOUBLE" property="newRate" />
  </resultMap>
  <select id="byArea" resultMap="areaMap">
    SELECT
      statis_day,
      area_code,
      area_name,
      sum(plan_count) as plan_count,
      sum(cust_count) as cust_count,
      sum(ground_count) as ground_count,
      sum(broadband_count) as broadband_count,
      round(sum(renewal_count)/sum(cust_count),2)*100 as renewal_rate,
      round(sum(communicate_count)/sum(cust_count),2)*100 as communicate_rate,
      round(sum(circle_count)/sum(cust_count),2)*100 as circle_rate,
      round(sum(division_region_count)/sum(cust_count),2)*100 as division_region_rate
    FROM tb_mk_2019_school_prom_notify_day
    WHERE
        statis_day=(case when #{statisDay}=-1 then (select max(statis_day) from tb_mk_2019_school_prom_notify_day) else #{statisDay} end)
      and area_name is not null
      and (case when #{authCode}='-1' then '-1'='-1' else trim(area_code)=#{authCode} end)
    GROUP BY statis_day,
             area_code,
             area_name
  </select>
  <select id="byUniversity" resultMap="universityMap">
    SELECT
      statis_day,
      university_code,
      university_name,
      sum(plan_count) as plan_count,
      sum(add_count) as add_count,
      sum(broadband_count) as broadband_count,
      round(sum(renewal_count)/sum(add_count),2)*100 as renewal_rate,
      round(sum(communicate_count)/sum(add_count),2)*100 as communicate_rate,
      round(sum(circle_count)/sum(add_count),2)*100 as circle_rate,
      round(sum(new_count)/sum(add_count),2)*100 as new_rate
    FROM tb_mk_2019_school_prom_report_list_day
    WHERE
      statis_day=(case when #{statisDay}=-1 then (select max(statis_day) from tb_mk_2019_school_prom_report_list_day) else #{statisDay} end)
      and trim(area_code)=#{areaCode}
    GROUP BY statis_day,
             university_code,
             university_name
  </select>

</mapper>